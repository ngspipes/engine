import dsl.entities.Pipe;
import dsl.language.Pipeline;
import exceptions.DSLException;
import progressReporter.SocketReporter;
import exceptions.ProgressReporterException;

public class %1$s {

	public static Pipe loadPipeline(String repositoryUri) throws DSLException {
		try {
			return new Pipeline(%2$s, repositoryUri).%3$sbuild();
		} catch(DSLException e) {
			throw new DSLException(":: Error creating pipeline instance :: " + e.getMessage(), e);
		}
	}

	public static void main(String[] args) throws DSLException {
		if(args.length == 0 || args[0].isEmpty())
			throw new DSLException(":: Error running pipeline :: no repository uri especified.");
		try {
			Pipe pipe = loadPipeline(args[0]);

			if(args.length == 4)
				pipe.run(new SocketReporter(Integer.parseInt(args[1]), args[2]), Integer.parseInt(args[3]));
			else
				if(args.length == 5)
					pipe.run(new SocketReporter(Integer.parseInt(args[1]), args[2]), Integer.parseInt(args[3]), Integer.parseInt(args[4]));
				else
					pipe.run(new SocketReporter(Integer.parseInt(args[1]), args[2]));
		} catch(DSLException e) {
			throw new DSLException(":: Error running pipeline :: " + e.getMessage(), e);
		}
	}
}